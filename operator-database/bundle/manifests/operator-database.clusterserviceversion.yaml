apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "database.sample.third.party/v1alpha1",
          "kind": "Database",
          "metadata": {
            "name": "database",
            "namespace": "database"
          },
          "spec": {
            "certificate": "certificate",
            "password": "password",
            "url": "url",
            "user": "name"
          }
        },
        {
          "apiVersion": "database.sample.third.party/v1alpha1",
          "kind": "DatabaseBackup",
          "metadata": {
            "name": "databasebackup-manual",
            "namespace": "database"
          },
          "spec": {
            "manualTrigger": {
              "repo": "ibmcos-repo",
              "time": "2022-04-20T02:59:43.1Z"
            },
            "repos": [
              {
                "bucketNamePrefix": "database-backup-",
                "cosRegion": "eu-geo",
                "name": "ibmcos-repo",
                "secretName": "ibmcos-repo",
                "serviceEndpoint": "s3.eu.cloud-object-storage.appdomain.cloud",
                "type": "ibmcos"
              }
            ],
            "scheduledTrigger": {
              "repo": "ibmcos-repo",
              "schedule": "*/3 * * * *"
            }
          }
        },
        {
          "apiVersion": "database.sample.third.party/v1alpha1",
          "kind": "DatabaseCluster",
          "metadata": {
            "name": "databasecluster-sample",
            "namespace": "database"
          },
          "spec": {
            "amountPods": 2
          }
        }
      ]
    capabilities: Auto Pilot
    operators.operatorframework.io/builder: operator-sdk-v1.19.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: operator-database.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - displayName: Database Backup
      kind: DatabaseBackup
      name: databasebackups.database.sample.third.party
      version: v1alpha1
    - description: DatabaseCluster is the Schema for the databaseclusters API
      displayName: Database Cluster
      kind: DatabaseCluster
      name: databaseclusters.database.sample.third.party
      version: v1alpha1
    - displayName: Database
      kind: Database
      name: databases.database.sample.third.party
      version: v1alpha1
  description: IBM Build Labs Database Operator
  displayName: Database Operator
  description: |-
    # IBM Build Labs Database Operator
    ## Introduction
    The IBM Build Labs operators provide Day 1 and Day 2 capabilities for a sample two tier 
    application.  
    
    This database operator relates to the backend database which provides a **very simple** 
    file based database.  The database implements a cluster where one pod is the 'leader' to 
    which applications can perform reads and writes.  Further pods are 'followers' providing 
    high availability and scalability.  Followers synchronize the data from the leader, but 
    only provide read capability.  Each pod of the database cluster stores its data to a 
    persistent volume.
    The database is very opinionated and only supports a single use case - storing a list of
    first & last names, persisted in a JSON file.  Therefore only a single API is provided:
    
    >**/persons** - GET/POST/PUT/DELETE a Person JSON object
    (other APIs help the pods elect the leader, and synchronize the data)
    
    ## Day 1 capabilities create the following resources:
    * StatefulSet, Pods, Persistent Volume Claims, Service
    ## Day 2 capabilities:
    * Immediate or scheduled backup of the data to one or more long term repositories 
    (e.g. Cloud Object Storage)
    
    ## Note
    This sample is based on an [Operator Reference Architecture](https://github.com/IBM/operator-sample-go) from IBM Build Labs.
  icon:
  - base64data: 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
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - batch
          resources:
          - cronjobs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - pods
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - database.sample.third.party
          resources:
          - databases
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch  
        - apiGroups:
          - database.sample.third.party
          resources:
          - databasebackups
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - database.sample.third.party
          resources:
          - databasebackups/finalizers
          verbs:
          - update
        - apiGroups:
          - database.sample.third.party
          resources:
          - databasebackups/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - database.sample.third.party
          resources:
          - databaseclusters
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - database.sample.third.party
          resources:
          - databaseclusters/finalizers
          verbs:
          - update
        - apiGroups:
          - database.sample.third.party
          resources:
          - databaseclusters/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: operator-database-controller-manager
      deployments:
      - label:
          control-plane: operator-database-controller-manager
        name: operator-database-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: operator-database-controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: operator-database-controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                image: docker.io/deleeuw/database-operator:v1.0.76
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: operator-database-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: operator-database-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - sample
  - database-operator
  links:
  - name: Operator Database
    url: https://operator-database.domain
  maturity: alpha
  provider:
    name: database.sample.third.party
    url: https://github.com/ibm/operator-sample-go
  version: 0.0.1
